import React, { useState } from 'react'
import { useRecorder } from '../lib/useRecorder'

type Props = { onText: (t: string) => void }

export const VoiceControls: React.FC<Props> = ({ onText }) => {
    const { recording, start, stopAndGetText, reset } = useRecorder()
    const [hint, setHint] = useState<string>('') // —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const [busy, setBusy] = useState(false)      // —Å—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏

    async function handleClick() {
        setHint('')

        if (!recording) {
            // –Ω–∞—á–∞–ª–æ –∑–∞–ø–∏—Å–∏
            try {
                await start()
                setHint('üéô –ò–¥—ë—Ç –∑–∞–ø–∏—Å—å...')
            } catch (e: any) {
                setHint(e?.message ?? '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É')
            }
            return
        }

        // –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø–∏—Å–∏ –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
        setBusy(true)
        setHint('‚è≥ –†–∞—Å–ø–æ–∑–Ω–∞—é...')
        try {
            const text = await stopAndGetText() // useRecorder —Å–∞–º –æ—Ç–ø—Ä–∞–≤–∏—Ç /api/stt
            if (text.trim()) {
                onText(text)
                reset()
                setHint('‚úÖ –ì–æ—Ç–æ–≤–æ')
                setTimeout(() => setHint(''), 1500)
            } else {
                setHint('‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç STT')
            }
        } catch (e: any) {
            setHint(e?.message ?? '–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è')
        } finally {
            setBusy(false)
        }
    }

    return (
        <div style={{ display: 'flex', gap: 8, alignItems: 'center' }}>
            <button
                type="button"
                className="btn"
                onClick={handleClick}
                disabled={busy}
                title={recording ? '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å' : '–ù–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å'}
            >
                {recording ? '‚èπ' : 'üé§'}
            </button>

            {hint && (
                <span style={{ fontSize: 12, opacity: 0.8 }}>
          {hint}
        </span>
            )}
        </div>
    )
}
